!function (a) {
    "function" == typeof define && define.amd ? define(["jquery"], a) : "object" == typeof exports ? module.exports = a(require("jquery")) : a(jQuery)
}(function (a) {
    function i() {
        var b, c, d = {height: f.innerHeight, width: f.innerWidth};
        return d.height || (b = e.compatMode, (b || !a.support.boxModel) && (c = "CSS1Compat" === b ? g : e.body, d = {
            height: c.clientHeight,
            width: c.clientWidth
        })), d
    }

    function j() {
        return {
            top: f.pageYOffset || g.scrollTop || e.body.scrollTop,
            left: f.pageXOffset || g.scrollLeft || e.body.scrollLeft
        }
    }

    function k() {
        if (b.length) {
            var e = 0, f = a.map(b, function (a) {
                var b = a.data.selector, c = a.$element;
                return b ? c.find(b) : c
            });
            for (c = c || i(), d = d || j(); e < b.length; e++) if (a.contains(g, f[e][0])) {
                var h = a(f[e]), k = {height: h[0].offsetHeight, width: h[0].offsetWidth}, l = h.offset(),
                    m = h.data("inview");
                if (!d || !c) return;
                l.top + k.height > d.top && l.top < d.top + c.height && l.left + k.width > d.left && l.left < d.left + c.width ? m || h.data("inview", !0).trigger("inview", [!0]) : m && h.data("inview", !1).trigger("inview", [!1])
            }
        }
    }

    var c, d, h, b = [], e = document, f = window, g = e.documentElement;
    a.event.special.inview = {
        add: function (c) {
            b.push({data: c, $element: a(this), element: this}), !h && b.length && (h = setInterval(k, 250))
        }, remove: function (a) {
            for (var c = 0; c < b.length; c++) {
                var d = b[c];
                if (d.element === this && d.data.guid === a.guid) {
                    b.splice(c, 1);
                    break
                }
            }
            b.length || (clearInterval(h), h = null)
        }
    }, a(f).on("scroll resize scrollstop", function () {
        c = d = null
    }), !g.addEventListener && g.attachEvent && g.attachEvent("onfocusin", function () {
        d = null
    })
});

$(function(){
    var $setElm = $('ul li a');
    var cutFigure = '60'; // カットする文字数
    var afterTxt = ' …'; // 文字カット後に表示するテキスト

    $setElm.each(function(){
        var textLength = $(this).text().length;
        var textTrim = $(this).text().substr(0,(cutFigure))

        if(cutFigure < textLength) {
            $(this).html(textTrim + afterTxt).css({visibility:'visible'});
        } else if(cutFigure >= textLength) {
            $(this).css({visibility:'visible'});
        }
    });

    $(window).load(function(){
        var $setElm = $('.ticker');
        var effectSpeed = 3000;
        var switchDelay = 6000;
        var easing = 'easeOutBack';

        $setElm.each(function(){
            var effectFilter = $(this).attr('rel'); // 'fade' or 'roll' or 'slide'

            var $targetObj = $(this);
            var $targetUl = $targetObj.children('ul');
            var $targetLi = $targetObj.find('li');
            var $setList = $targetObj.find('li:first');

            var ulWidth = $targetUl.width();
            var listHeight = $targetLi.height();
            $targetObj.css({height:(listHeight)});
            $targetLi.css({top:'0',left:'0',position:'absolute'});

            var liCont = $targetLi.length;

            if(effectFilter == 'fade') {
                $setList.css({display:'block',opacity:'0',zIndex:'98'}).stop().animate({opacity:'1'},effectSpeed,easing).addClass('showlist');
                if(liCont > 1) {
                    setInterval(function(){
                        var $activeShow = $targetObj.find('.showlist');
                        $activeShow.animate({opacity:'0'},effectSpeed,easing,function(){
                            $(this).next().css({display:'block',opacity:'0',zIndex:'99'}).animate({opacity:'1'},effectSpeed,easing).addClass('showlist').end().appendTo($targetUl).css({display:'none',zIndex:'98'}).removeClass('showlist');
                        });
                    },switchDelay);
                }
            } else if(effectFilter == 'roll') {
                $setList.css({top:'3em',display:'block',opacity:'0',zIndex:'98'}).stop().animate({top:'0',opacity:'1'},effectSpeed,easing).addClass('showlist');
                if(liCont > 1) {
                    setInterval(function(){
                        var $activeShow = $targetObj.find('.showlist');
                        $activeShow.animate({top:'-3em',opacity:'0'},effectSpeed,easing).next().css({top:'3em',display:'block',opacity:'0',zIndex:'99'}).animate({top:'0',opacity:'1'},effectSpeed,easing).addClass('showlist').end().appendTo($targetUl).css({zIndex:'98'}).removeClass('showlist');
                    },switchDelay);
                }
            } else if(effectFilter == 'slide') {
                $setList.css({left:(ulWidth),display:'block',opacity:'0',zIndex:'98'}).stop().animate({left:'0',opacity:'1'},effectSpeed,easing).addClass('showlist');
                if(liCont > 1) {
                    setInterval(function(){
                        var $activeShow = $targetObj.find('.showlist');
                        $activeShow.animate({left:(-(ulWidth)),opacity:'0'},effectSpeed,easing).next().css({left:(ulWidth),display:'block',opacity:'0',zIndex:'99'}).animate({left:'0',opacity:'1'},effectSpeed,easing).addClass('showlist').end().appendTo($targetUl).css({zIndex:'98'}).removeClass('showlist');
                    },switchDelay);
                }
            }
        });
    });
});

